---
import '@/styles/globals.css';
type Props = {
  title: string;
  description: string;
  path: string;
  og: {
    enabled: boolean;
  };
};

const { title, description } = Astro.props;
import Header from '@/components/Header.astro';
import Footer from '@/components/Footer.astro';
import { TailwindIndicator } from '@/components/tailwind-indicator';
---

<script is:inline>
  const getThemePreference = () => {
    if (typeof localStorage !== 'undefined' && localStorage.getItem('theme')) {
      return localStorage.getItem('theme');
    }
    return window.matchMedia('(prefers-color-scheme: dark)').matches
      ? 'dark'
      : 'light';
  };
  const isDark = getThemePreference() === 'dark';
  document.documentElement.classList[isDark ? 'add' : 'remove']('dark');

  if (typeof localStorage !== 'undefined') {
    const observer = new MutationObserver(() => {
      const isDark = document.documentElement.classList.contains('dark');
      localStorage.setItem('theme', isDark ? 'dark' : 'light');
    });
    observer.observe(document.documentElement, {
      attributes: true,
      attributeFilter: ['class'],
    });
  }
</script>

<html lang="ja">
  <head>
    <meta charset="UTF-8" />
    <meta name="viewport" content="width=device-width initial-scale=1" />
    <link rel="icon" href="/favicon.ico" type="image/x-icon" sizes="48x48" />
    <link rel="sitemap" href="/sitemap.xml" type="application/xml" />
    <meta name="description" content={description} />
    <title>{title}</title>
  </head>
  <body>
    <Header />
    <main>
      <slot />
    </main>
    <TailwindIndicator client:load />
    <Footer />
  </body>
</html>
